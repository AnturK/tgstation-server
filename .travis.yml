os: linux
dist: xenial
language: generic
git:
  depth: 1

branches:
  only:
  - dev
  - master

jobs:
  include:
    - env:
      - DoxGeneration=true
      name: "Dox Generation"
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=true
      - BYOND_MAJOR="513"
      - BYOND_MINOR="1517"
      - DMEName="tests/DMAPI/travistester.dme"
      name: "DMAPI Unit Tests"
      cache:
        directories:
          - $HOME/BYOND-${BYOND_MAJOR}.${BYOND_MINOR}

      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Debug
      name: "Test Server Debug"
      language: csharp
      mono: none
      dotnet: 3.1
      services:
        - mysql
      cache:
        directories:
          - $HOME/.nuget/packages:
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Release
      name: "Test Server Release"
      language: csharp
      mono: none
      dotnet: 3.1
      services:
        - mysql
      cache:
        directories:
          - $HOME/.nuget/packages:
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=true
      name: "Docker Build"
      services:
        - docker

install:
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = true ]; then build/install_byond.sh; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = false ]; then dotnet restore tgstation-server.sln; fi

script:
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = true ]; then tests/DMAPI/BasicOperation/build_byond.sh || travis_terminate 1; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = false ]; then build/test_core.sh; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = true ]; then docker build . -f build/Dockerfile; fi
  - if [ $DoxGeneration = true ]; then build/build_dox.sh; fi

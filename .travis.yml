os: linux
dist: xenial
language: generic
git:
  depth: 1

branches:
  only:
  - dev
  - master

jobs:
  include:
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Release
      - TGS4_TEST_DATABASE_TYPE=MySql
      - TGS4_TEST_CONNECTION_STRING="server=127.0.0.1;uid=root;pwd=;database=tgs_test"
      name: "MySql Integration Test"
      language: csharp
      mono: none
      services:
        - mysql
      dotnet: 3.1
      cache:
        directories:
          - $HOME/.nuget/packages:
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Release
      - TGS4_TEST_DATABASE_TYPE=Sqlite
      - TGS4_TEST_CONNECTION_STRING="Data Source=TravisTestDB.sqlite3;Mode=ReadWriteCreate"
      name: "Sqlite Integration Test"
      language: csharp
      mono: none
      dotnet: 3.1
      cache:
        directories:
          - $HOME/.nuget/packages:
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Release
      - TGS4_TEST_DATABASE_TYPE=PostgresSql
      - TGS4_TEST_CONNECTION_STRING="Application Name=tgstation-server;Host=127.0.0.1;Username=postgres;Password=;Database=TGS_Test"
      - Database__ServerVersion="9.6"
      name: "PostgresSql Integration Test"
      language: csharp
      mono: none
      dotnet: 3.1
      services:
        - postgresql
      cache:
        directories:
          - $HOME/.nuget/packages:
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Debug
      name: "Debug Unit Tests"
      language: csharp
      mono: none
      dotnet: 3.1
      cache:
        directories:
          - $HOME/.nuget/packages:
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=false
      - CONFIG=Release
      name: "Release Unit Tests"
      language: csharp
      mono: none
      dotnet: 3.1
      cache:
        directories:
          - $HOME/.nuget/packages:
    - env:
      - DoxGeneration=false
      - DockerBuild=true
      name: "Docker Build"
      services:
        - docker
    - env:
      - DoxGeneration=true
      name: "Dox Generation"
      addons:
        apt:
          packages:
            - doxygen
            - graphviz
    - env:
      - DoxGeneration=false
      - DockerBuild=false
      - DMAPI=true
      - BYOND_MAJOR="513"
      - BYOND_MINOR="1517"
      - DMEName="tests/DMAPI/travistester.dme"
      name: "DMAPI Unit Tests"
      cache:
        directories:
          - $HOME/BYOND-${BYOND_MAJOR}.${BYOND_MINOR}
      addons:
        apt:
          packages:
            - libc6-i386
            - libstdc++6:i386

install:
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = true ]; then build/install_byond.sh; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = false ]; then dotnet restore tgstation-server.sln; fi

script:
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = true ]; then tests/DMAPI/BasicOperation/build_byond.sh || travis_terminate 1; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = false ] && [ $DMAPI = false ]; then build/test_core.sh; fi
  - if [ $DoxGeneration = false ] && [ $DockerBuild = true ]; then docker build . -f build/Dockerfile; fi
  - if [ $DoxGeneration = true ]; then build/build_dox.sh; fi
